Problem:Average in a stream
Algorithm:
Algorithm: Calculate the moving average of a stream of integers.
1.Initialize a float array result of size n to store the moving averages.
2.Initialize a variable sum to keep track of the cumulative sum of the elements encountered so far.
3.Iterate through the array arr:
4.Add the current element to the sum.
5.Calculate the average of the elements encountered so far (up to the current index) by dividing the sum by the number of elements encountered so far (i + 1).
6.Store the calculated average in the result array.
7.Return the result array containing the moving averages.
Time complexity: O(n)
Space complexity: O(n)
Code:
class Solution {
    float[] streamAvg(int[] arr, int n) {
        // code here
//take an array of size n of type float to store the result
        float[] result = new float[n];
        float sum = 0;
        
        for (int i = 0; i < n; i++) {
//in first iteration it will sum will be stored with first elemmnet in the userdefined array and in second iteration second element added and so on..
            sum += arr[i];
            result[i] = sum / (i + 1);
        }
        
        return result;
    }
}





